#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function askQuestion(question) {
  return new Promise((resolve) => {
    rl.question(question, (answer) => {
      resolve(answer.trim());
    });
  });
}

async function setupTenant() {
  console.log('üöÄ SPFx Deployment Configuration Setup');
  console.log('=====================================\n');
  
  try {
    // Get tenant information
    const tenantName = await askQuestion('Enter your SharePoint tenant name (e.g., contoso): ');
    const username = await askQuestion(`Enter your admin username (e.g., admin@${tenantName}.onmicrosoft.com): `);
    const password = await askQuestion('Enter your password (will be hidden in .env): ');
    
    // Validate inputs
    if (!tenantName || !username || !password) {
      console.error('‚ùå All fields are required!');
      process.exit(1);
    }
    
    // Generate URLs
    const tenantUrl = `https://${tenantName}.sharepoint.com`;
    const appCatalogUrl = `${tenantUrl}/sites/appcatalog`;
    
    console.log('\nüìù Generated Configuration:');
    console.log(`Tenant URL: ${tenantUrl}`);
    console.log(`App Catalog: ${appCatalogUrl}`);
    console.log(`Username: ${username}\n`);
    
    // Create .env content
    const envContent = `# SharePoint Online Deployment Configuration
# Generated by setup script

# Microsoft 365 Credentials
M365_USERNAME=${username}
M365_PASSWORD=${password}
M365_APP_ID=31359c7f-bd7e-475c-86db-fdb8c937548e

# SharePoint URLs
SHAREPOINT_TENANT_URL=${tenantUrl}
APP_CATALOG_URL=${appCatalogUrl}

# Note: For production deployments, use Azure App Registration instead of user credentials
`;
    
    // Write .env file
    const envPath = path.join(__dirname, '../.env');
    fs.writeFileSync(envPath, envContent);
    
    console.log('‚úÖ Created .env file successfully!');
    console.log('üîí Make sure to add .env to your .gitignore file');
    console.log('');
    console.log('ÔøΩÔ∏è  Next Steps:');
    console.log('1. Install Microsoft 365 CLI (if not already installed):');
    console.log('   npm install -g @pnp/cli-microsoft365');
    console.log('');
    console.log('2. Configure the CLI:');
    console.log('   m365 setup');
    console.log('');
    console.log('3. Login to Microsoft 365:');
    console.log('   m365 login');
    console.log('');
    console.log('4. Deploy your solution:');
    console.log('   npm run deploy:full');
    
  } catch (error) {
    console.error('‚ùå Setup failed:', error.message);
    process.exit(1);
  } finally {
    rl.close();
  }
}

// Run setup
setupTenant();
